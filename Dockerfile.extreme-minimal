# Extreme minimal production image for fastest startup
FROM python:3.10-slim

# Install only absolutely essential system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get purge -y --auto-remove

# Create user
RUN useradd --create-home --shell /bin/bash appuser

# Set working directory  
WORKDIR /app

# Copy minimal requirements
COPY requirements-ultra-minimal.txt requirements-fallback.txt ./

# Install with aggressive optimization
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements-ultra-minimal.txt \
    && pip cache purge \
    && rm -rf /root/.cache/pip/* \
    && rm -rf /tmp/*

# Copy application with minimal footprint
COPY --chown=appuser:appuser app/ ./app/
COPY --chown=appuser:appuser run.py .
COPY --chown=appuser:appuser gunicorn.conf.py .

# Switch to non-root user
USER appuser

# Environment variables for extreme optimization
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV FLASK_ENV=production
ENV MODEL_NAME=paraphrase-MiniLM-L3-v2

# Disable unnecessary model downloads
ENV SENTENCE_TRANSFORMERS_DISABLE_ONNX=1
ENV SENTENCE_TRANSFORMERS_DISABLE_OPENVINO=1
ENV SENTENCE_TRANSFORMERS_HOME=/tmp/sentence_transformers
ENV HF_HOME=/tmp/huggingface
ENV TRANSFORMERS_CACHE=/tmp/transformers_cache
ENV TRANSFORMERS_OFFLINE=0

# Expose port
EXPOSE 5001

# Optimized health check for extreme minimal setup
HEALTHCHECK --interval=60s --timeout=30s --start-period=120s --retries=2 \
    CMD curl -f http://localhost:5001/health || exit 1

# Run with extended timeout for first request
CMD ["gunicorn", "--config", "gunicorn.conf.py", "run:app"] 