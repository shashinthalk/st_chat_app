# Fixed production Docker image
FROM python:3.10-slim

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get purge -y --auto-remove

# Create user
RUN useradd --create-home --shell /bin/bash appuser

# Set working directory  
WORKDIR /app

# Copy requirements (with psutil included)
COPY requirements-fixed.txt ./

# Install with proper psutil support
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements-fixed.txt \
    && pip cache purge \
    && rm -rf /root/.cache/pip/* \
    && rm -rf /tmp/*

# Copy application
COPY --chown=appuser:appuser app/ ./app/
COPY --chown=appuser:appuser run.py .
COPY --chown=appuser:appuser gunicorn.conf.py .

# Switch to non-root user
USER appuser

# Environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV FLASK_ENV=production
ENV MODEL_NAME=paraphrase-MiniLM-L3-v2

# Model optimization environment variables
ENV SENTENCE_TRANSFORMERS_HOME=/tmp/sentence_transformers
ENV HF_HOME=/tmp/huggingface
ENV TRANSFORMERS_CACHE=/tmp/transformers_cache
ENV TRANSFORMERS_OFFLINE=0

# Disable unnecessary model formats
ENV SENTENCE_TRANSFORMERS_DISABLE_ONNX=1
ENV SENTENCE_TRANSFORMERS_DISABLE_OPENVINO=1
ENV PYTORCH_TRANSFORMERS_CACHE=/tmp/transformers_cache
ENV HF_DATASETS_OFFLINE=1

# Memory management
ENV MALLOC_TRIM_THRESHOLD_=100000
ENV MALLOC_TOP_PAD_=100000

# Expose port
EXPOSE 5001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=120s --retries=3 \
    CMD curl -f http://localhost:5001/health || exit 1

# Run the application
CMD ["gunicorn", "--config", "gunicorn.conf.py", "run:app"] 